# Generated by Django 2.2.4 on 2019-09-20 19:10

import common.validators
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import game.models.game
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('player', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Artifact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('description', models.CharField(blank=True, max_length=2000, null=True)),
                ('path', models.CharField(max_length=256)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ArtifactType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('description', models.CharField(blank=True, max_length=2000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Case',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('description', models.TextField(blank=True, max_length=3000, null=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('published_date', models.DateTimeField(blank=True, null=True)),
                ('is_published', models.BooleanField(default=False)),
                ('base_img_path', models.FilePathField(path=None)),
                ('case_image', models.ImageField(blank=True, null=True, upload_to=game.models.game.get_image_path)),
                ('protocol', models.CharField(default='ssh', max_length=16)),
                ('terminal_username', models.CharField(blank=True, max_length=64, null=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Character',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('full_name', models.CharField(max_length=128, unique=True)),
                ('mail_address', models.EmailField(blank=True, max_length=254, null=True)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to=game.models.game.get_image_path)),
                ('case', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='game.Case')),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('avatar', models.CharField(blank=True, max_length=512, null=True)),
                ('is_online', models.BooleanField(default=True)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('character', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.Character')),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('description', models.CharField(blank=True, max_length=2000, null=True)),
                ('delay_start', models.IntegerField(validators=[common.validators.Validator.validate_positive_number])),
                ('onfinish_cancel_active_events', models.BooleanField(default=False)),
                ('case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.Case')),
            ],
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('description', models.TextField(blank=True, max_length=4000, null=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('published_date', models.DateTimeField(blank=True, null=True)),
                ('is_published', models.BooleanField(default=False)),
                ('game_image', models.ImageField(blank=True, null=True, upload_to=game.models.game.get_image_path)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='player.Course')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='GroupArtifactInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('info_key', models.CharField(default=uuid.uuid4, max_length=128)),
                ('is_artifact_active', models.BooleanField(default=False)),
                ('artifact_path', models.CharField(max_length=256)),
                ('artifact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.Artifact')),
            ],
        ),
        migrations.CreateModel(
            name='HiddenInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('description', models.CharField(blank=True, max_length=2000, null=True)),
                ('score', models.IntegerField(validators=[common.validators.Validator.validate_positive_number])),
                ('is_event_key', models.BooleanField(default=False)),
                ('common_key_code', models.CharField(blank=True, max_length=128, null=True)),
                ('prefix_key_code', models.CharField(blank=True, max_length=32, null=True)),
                ('suffix_key_code', models.CharField(blank=True, max_length=32, null=True)),
                ('random_key_code_word', models.BooleanField(default=False)),
                ('random_word_maxlength', models.IntegerField(validators=[common.validators.Validator.validate_positive_number])),
                ('artifact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.Artifact')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.Event')),
            ],
        ),
        migrations.CreateModel(
            name='StoryType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('description', models.CharField(blank=True, max_length=1000, null=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Tool',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('description', models.CharField(blank=True, max_length=1000, null=True)),
                ('command', models.CharField(max_length=1000)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ToolParameter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('description', models.CharField(blank=True, max_length=1000, null=True)),
                ('parameter', models.CharField(blank=True, max_length=1000, null=True)),
                ('tool', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.Tool')),
            ],
        ),
        migrations.CreateModel(
            name='GroupResponse',
            fields=[
                ('group_artifact_info', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='game.GroupArtifactInfo')),
                ('player_comment', models.CharField(blank=True, max_length=4000, null=True)),
                ('response_date', models.DateTimeField(auto_now_add=True)),
                ('score', models.IntegerField(default=0, validators=[common.validators.Validator.validate_positive_number])),
            ],
        ),
        migrations.CreateModel(
            name='ToolParameterValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=512)),
                ('add_key_code', models.BooleanField(default=False)),
                ('order', models.IntegerField(default=0, validators=[common.validators.Validator.validate_positive_number])),
                ('hidden_info', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.HiddenInfo')),
                ('param', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.ToolParameter')),
                ('tool', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.Tool')),
            ],
        ),
        migrations.CreateModel(
            name='Story',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('description', models.CharField(blank=True, max_length=1000, null=True)),
                ('story_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.StoryType')),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plane_text', models.CharField(blank=True, max_length=4000, null=True)),
                ('file_path', models.FileField(blank=True, upload_to='')),
                ('delay_to_show', models.IntegerField(validators=[common.validators.Validator.validate_positive_number], verbose_name='delay to show (seconds)')),
                ('order', models.IntegerField(validators=[common.validators.Validator.validate_positive_number])),
                ('character', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='game.Character')),
                ('story', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.Story')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='HidingType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True)),
                ('description', models.CharField(blank=True, max_length=2000, null=True)),
                ('tool', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.Tool')),
            ],
        ),
        migrations.AddField(
            model_name='hiddeninfo',
            name='hiding_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.HidingType'),
        ),
        migrations.CreateModel(
            name='GroupGameCase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('finish_date', models.DateTimeField(blank=True, null=True)),
                ('docker_image_name', models.CharField(max_length=32)),
                ('docker_container_name', models.CharField(blank=True, max_length=32)),
                ('protocol', models.CharField(default='ssh', max_length=16)),
                ('username', models.CharField(max_length=64)),
                ('password', models.CharField(max_length=64)),
                ('total_score', models.IntegerField(default=0, validators=[common.validators.Validator.validate_positive_number])),
                ('case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.Case')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.Game')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='player.Group')),
            ],
            options={
                'unique_together': {('game', 'group', 'case')},
            },
        ),
        migrations.CreateModel(
            name='GroupEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('finish_date', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.Event')),
                ('group_game_case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.GroupGameCase')),
            ],
            options={
                'unique_together': {('group_game_case', 'event')},
            },
        ),
        migrations.AddField(
            model_name='groupartifactinfo',
            name='group_event',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.GroupEvent'),
        ),
        migrations.AddField(
            model_name='groupartifactinfo',
            name='group_game_case',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.GroupGameCase'),
        ),
        migrations.AddField(
            model_name='groupartifactinfo',
            name='hidden_info',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.HiddenInfo'),
        ),
        migrations.AddField(
            model_name='event',
            name='event_end_story',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='event_end_story_id', to='game.Story'),
        ),
        migrations.AddField(
            model_name='event',
            name='event_intro_story',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='event_intro_story_id', to='game.Story'),
        ),
        migrations.AddField(
            model_name='event',
            name='previous_event',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='game.Event'),
        ),
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.Contact')),
                ('group_game_case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.GroupGameCase')),
            ],
        ),
        migrations.AddField(
            model_name='contact',
            name='group_game_case',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.GroupGameCase'),
        ),
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_bot_message', models.BooleanField(default=True)),
                ('text_message', models.CharField(max_length=4000)),
                ('date_message', models.DateTimeField(auto_now_add=True)),
                ('unread_message', models.BooleanField(default=True)),
                ('conversation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.Conversation')),
                ('story_message', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='game.Message')),
            ],
        ),
        migrations.CreateModel(
            name='CharacterEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('character', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.Character')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.Event')),
            ],
            options={
                'unique_together': {('character', 'event')},
            },
        ),
        migrations.AddField(
            model_name='character',
            name='events',
            field=models.ManyToManyField(related_name='characters', through='game.CharacterEvent', to='game.Event'),
        ),
        migrations.AddField(
            model_name='case',
            name='game',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.Game'),
        ),
        migrations.AddField(
            model_name='case',
            name='story',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='game.Story'),
        ),
        migrations.AddField(
            model_name='artifact',
            name='artifact_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.ArtifactType'),
        ),
        migrations.AddField(
            model_name='artifact',
            name='case',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.Case'),
        ),
        migrations.CreateModel(
            name='PlayerRating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(default=0, validators=[common.validators.Validator.validate_positive_number])),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('group_response', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.GroupResponse')),
            ],
        ),
        migrations.AddField(
            model_name='groupresponse',
            name='group_game_case',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.GroupGameCase'),
        ),
        migrations.AlterUniqueTogether(
            name='groupartifactinfo',
            unique_together={('group_event', 'artifact', 'hidden_info')},
        ),
    ]
